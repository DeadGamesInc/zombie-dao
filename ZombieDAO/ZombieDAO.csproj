<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>net7.0</TargetFramework>
        <SpaRoot>../UI/</SpaRoot>
        <Nullable>enable</Nullable>
        <ImplicitUsings>enable</ImplicitUsings>
        <AssemblyName>zombie-dao</AssemblyName>
        <PackageId />
        <Version />
        <Authors />
        <Company>Dead Games Inc</Company>
        <AssemblyVersion>0.0.0</AssemblyVersion>
        <FileVersion>0.0.0</FileVersion>
        <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
        <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
        <IsPackable>false</IsPackable>
        <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules/**</DefaultItemExcludes>
        <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
        <Product>ZombieDAO</Product>
    </PropertyGroup>

    <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
      <OutputPath>../build/zombiedao/debug/</OutputPath>
    </PropertyGroup>

    <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
      <OutputPath>../build/zombiedao/release/</OutputPath>
    </PropertyGroup>

    <ItemGroup>
      <PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="7.0.1" />
      <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="7.0.1" />
      <PackageReference Include="Microsoft.EntityFrameworkCore" Version="7.0.1" />
      <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="7.0.1">
        <PrivateAssets>all</PrivateAssets>
        <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      </PackageReference>
      <PackageReference Include="Nethereum.HdWallet" Version="4.12.0" />
      <PackageReference Include="Nethereum.Web3" Version="4.12.0" />
      <PackageReference Include="Npgsql" Version="7.0.1" />
      <PackageReference Include="Npgsql.EntityFrameworkCore.PostgreSQL" Version="7.0.1" />
      <PackageReference Include="Polly" Version="7.2.3" />
      <PackageReference Include="Polly.Contrib.WaitAndRetry" Version="1.1.1" />
      <PackageReference Include="Polly.Extensions.Http" Version="3.0.0" />
      <PackageReference Include="Serilog" Version="2.12.1-dev-01635" />
      <PackageReference Include="Serilog.Extensions.Hosting" Version="5.0.1" />
      <PackageReference Include="Serilog.Sinks.Console" Version="4.1.1-dev-00896" />
      <PackageReference Include="Serilog.Sinks.File" Version="5.0.1-dev-00947" />
    </ItemGroup>

    <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
        <Exec Command="node --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project." />
        <Message Importance="high" Text="Restoring dependencies using 'yarn'. This may take several minutes..." />
        <Exec WorkingDirectory="$(SpaRoot)" Command="yarn install" />
    </Target>

    <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
        <Exec WorkingDirectory="$(SpaRoot)" Command="yarn install" />
        <Exec WorkingDirectory="$(SpaRoot)" Command="yarn build" />

        <ItemGroup>
            <DistFiles Include="$(SpaRoot)build\**" />
            <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
                <RelativePath>wwwroot/%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
                <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
                <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
            </ResolvedFileToPublish>
        </ItemGroup>
    </Target>

</Project>
