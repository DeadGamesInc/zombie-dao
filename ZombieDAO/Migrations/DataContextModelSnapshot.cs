// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ZombieDAO;

#nullable disable

namespace ZombieDAO.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ZombieDAO.Models.ProjectMemberModel", b =>
                {
                    b.Property<Guid>("ProjectID")
                        .HasColumnType("uuid")
                        .HasColumnName("project_id");

                    b.Property<string>("UserWallet")
                        .HasColumnType("text")
                        .HasColumnName("user_wallet");

                    b.Property<byte>("Level")
                        .HasColumnType("smallint")
                        .HasColumnName("level");

                    b.HasKey("ProjectID", "UserWallet");

                    b.HasIndex("UserWallet");

                    b.ToTable("project_members");
                });

            modelBuilder.Entity("ZombieDAO.Models.ProjectModel", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email_address");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("website");

                    b.HasKey("ID");

                    b.ToTable("projects");
                });

            modelBuilder.Entity("ZombieDAO.Models.UserModel", b =>
                {
                    b.Property<string>("Wallet")
                        .HasColumnType("text")
                        .HasColumnName("wallet");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("display_name");

                    b.HasKey("Wallet");

                    b.ToTable("users");
                });

            modelBuilder.Entity("ZombieDAO.Models.ProjectMemberModel", b =>
                {
                    b.HasOne("ZombieDAO.Models.ProjectModel", "Project")
                        .WithMany("Members")
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZombieDAO.Models.UserModel", "User")
                        .WithMany("Projects")
                        .HasForeignKey("UserWallet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ZombieDAO.Models.ProjectModel", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("ZombieDAO.Models.UserModel", b =>
                {
                    b.Navigation("Projects");
                });
#pragma warning restore 612, 618
        }
    }
}
